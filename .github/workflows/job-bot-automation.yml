name: Enhanced Ultimate Job Bot

on:
  schedule:
    # Run every 2 hours
    - cron: '0 */2 * * *'
  workflow_dispatch: # Allow manual trigger
    inputs:
      job_limit:
        description: 'Maximum number of jobs to apply to'
        required: false
        default: '10'
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: 'false'
        type: boolean
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - '.github/workflows/**'

env:
  PYTHON_VERSION: '3.11'
  FIREFOX_VERSION: 'latest'

jobs:
  enhanced-ultimate-job-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "AI-Powered Enhanced Run"
            job_limit: ${{ github.event.inputs.job_limit || '20' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

    - name: Install Firefox and geckodriver
      run: |
        sudo apt-get update
        sudo snap remove firefox 2>/dev/null || true
        sudo apt-get install -y software-properties-common xvfb
        
        # Install Firefox ESR
        sudo add-apt-repository -y ppa:mozillateam/ppa
        echo 'Package: *' | sudo tee /etc/apt/preferences.d/mozilla-firefox > /dev/null
        echo 'Pin: release o=LP-PPA-mozillateam' | sudo tee -a /etc/apt/preferences.d/mozilla-firefox > /dev/null
        echo 'Pin-Priority: 1001' | sudo tee -a /etc/apt/preferences.d/mozilla-firefox > /dev/null
        sudo apt-get update
        sudo apt-get install -y firefox
        
        # Install geckodriver
        GECKO_VERSION=$(curl -s "https://api.github.com/repos/mozilla/geckodriver/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
        curl -L --fail --retry 3 "https://github.com/mozilla/geckodriver/releases/download/v${GECKO_VERSION}/geckodriver-v${GECKO_VERSION}-linux64.tar.gz" -o /tmp/geckodriver.tar.gz
        sudo tar -xzf /tmp/geckodriver.tar.gz -C /usr/local/bin/
        sudo chmod +x /usr/local/bin/geckodriver
        
        # Verify installation
        geckodriver --version
        firefox --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment
      run: |
        cat > .env << EOF
        PERSONAL_FULL_NAME=${{ secrets.PERSONAL_FULL_NAME }}
        PERSONAL_EMAIL=${{ secrets.PERSONAL_EMAIL }}
        PERSONAL_PHONE=${{ secrets.PERSONAL_PHONE }}
        PERSONAL_LINKEDIN=${{ secrets.PERSONAL_LINKEDIN }}
        PERSONAL_GITHUB=${{ secrets.PERSONAL_GITHUB }}
        PERSONAL_LOCATION=${{ secrets.PERSONAL_LOCATION }}
        TWITTER_EMAIL=${{ secrets.TWITTER_EMAIL }}
        TWITTER_PASSWORD=${{ secrets.TWITTER_PASSWORD }}
        INDEED_EMAIL=${{ secrets.INDEED_EMAIL }}
        INDEED_PASSWORD=${{ secrets.INDEED_PASSWORD }}
        DICE_EMAIL=${{ secrets.DICE_EMAIL }}
        DICE_PASSWORD=${{ secrets.DICE_PASSWORD }}
        WEWORKREMOTELY_EMAIL=${{ secrets.WEWORKREMOTELY_EMAIL }}
        WEWORKREMOTELY_PASSWORD=${{ secrets.WEWORKREMOTELY_PASSWORD }}
        TURING_EMAIL=${{ secrets.TURING_EMAIL }}
        TURING_PASSWORD=${{ secrets.TURING_PASSWORD }}
        REMOTEOK_EMAIL=${{ secrets.REMOTEOK_EMAIL }}
        REMOTEOK_PASSWORD=${{ secrets.REMOTEOK_PASSWORD }}
        FLEXJOBS_EMAIL=${{ secrets.FLEXJOBS_EMAIL }}
        FLEXJOBS_PASSWORD=${{ secrets.FLEXJOBS_PASSWORD }}
        JOB_TITLES="Site Reliability Engineer (SRE),Platform Engineer,Cloud Infrastructure Engineer (AWS/Azure/GCP),Senior DevOps Engineer,Kubernetes Engineer,K8s Admin,Terraform/IaC Engineer,CI/CD Automation Engineer,Cloud Security Engineer,DevOps Engineer,Cloud Engineer (AWS/GCP),Build & Release Engineer,Jenkins Pipeline Engineer,Linux System Administrator (Cloud-based),Infrastructure Engineer,Automation Engineer (Bash/Python)"
        SKILLS="DevOps,AWS,Docker,Kubernetes,Python,Linux,CI/CD,Jenkins,Terraform,Azure,GCP,Ansible,Prometheus,Grafana,Git,Bash"
        BLACKLISTED_COMPANIES="Fake Corp,Scam Inc,MLM Company"
        PREFERRED_COMPANIES="Google,Microsoft,Amazon,Netflix,Meta,Apple,Tesla,Spotify"
        SALARY_MIN=60000
        REMOTE_ONLY=true
        EXPERIENCE_LEVEL=entry
        EMAIL_NOTIFICATIONS=true
        SMTP_SERVER=smtp.gmail.com
        SENDER_EMAIL=${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD=${{ secrets.SENDER_PASSWORD }}
        RECIPIENT_EMAIL=${{ secrets.RECIPIENT_EMAIL }}
        EOF
        mkdir -p application_proofs

    - name: Install NLP dependencies
      run: |
        python -m pip install --no-deps nltk spacy textblob scikit-learn pandas numpy
        python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords'); nltk.download('wordnet')"
        python -m spacy download en_core_web_sm || echo "Spacy model download failed, will continue without it"

    - name: Run enhanced ultimate job bot
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        sleep 3
        echo "üöÄ Starting enhanced ultimate job bot..."
        python enhanced_ultimate_job_bot.py
        echo "‚úÖ Enhanced job bot completed!"
      env:
        PYTHONPATH: .
        GITHUB_ACTIONS: true
        PERSONAL_FULL_NAME: ${{ secrets.PERSONAL_FULL_NAME }}
        PERSONAL_EMAIL: ${{ secrets.PERSONAL_EMAIL }}
        PERSONAL_PHONE: ${{ secrets.PERSONAL_PHONE }}
        PERSONAL_LINKEDIN: ${{ secrets.PERSONAL_LINKEDIN }}
        PERSONAL_GITHUB: ${{ secrets.PERSONAL_GITHUB }}
        PERSONAL_LOCATION: ${{ secrets.PERSONAL_LOCATION }}
        TWITTER_EMAIL: ${{ secrets.TWITTER_EMAIL }}
        TWITTER_PASSWORD: ${{ secrets.TWITTER_PASSWORD }}
        INDEED_EMAIL: ${{ secrets.INDEED_EMAIL }}
        INDEED_PASSWORD: ${{ secrets.INDEED_PASSWORD }}
        DICE_EMAIL: ${{ secrets.DICE_EMAIL }}
        DICE_PASSWORD: ${{ secrets.DICE_PASSWORD }}
        WEWORKREMOTELY_EMAIL: ${{ secrets.WEWORKREMOTELY_EMAIL }}
        WEWORKREMOTELY_PASSWORD: ${{ secrets.WEWORKREMOTELY_PASSWORD }}
        TURING_EMAIL: ${{ secrets.TURING_EMAIL }}
        TURING_PASSWORD: ${{ secrets.TURING_PASSWORD }}
        REMOTEOK_EMAIL: ${{ secrets.REMOTEOK_EMAIL }}
        REMOTEOK_PASSWORD: ${{ secrets.REMOTEOK_PASSWORD }}
        FLEXJOBS_EMAIL: ${{ secrets.FLEXJOBS_EMAIL }}
        FLEXJOBS_PASSWORD: ${{ secrets.FLEXJOBS_PASSWORD }}

    - name: Upload enhanced job bot results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: enhanced-job-bot-results-${{ github.run_number }}
        path: |
          application_proofs/
          enhanced_applications.txt
          enhanced_cycle_log.txt
          enhanced_job_bot.log
          job_bot.db
        retention-days: 7

    - name: Upload analytics data
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: job-bot-analytics-${{ github.run_number }}
        path: |
          job_bot.db
          applied_jobs_history.pkl
        retention-days: 30

    - name: Enhanced job bot completion summary
      if: always()
      run: |
        echo "üéâ Enhanced Ultimate Job Bot run completed at $(date)"
        echo "ü§ñ AI-powered job application system executed successfully"
        echo "üìä Analytics database and logs uploaded as artifacts"
        echo "üì∏ Screenshots and proof uploaded for review"
        echo "‚è∞ Next automated run in ~2 hours"
        echo "üîó View artifacts in the Actions tab for detailed results"
